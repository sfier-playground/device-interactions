//
// Code generated by go-jet DO NOT EDIT.
//
// WARNING: Changes to this file may cause incorrect behavior
// and will be lost if the code is regenerated
//

package table

import (
	"github.com/go-jet/jet/v2/postgres"
)

var DeviceInteractions = newDeviceInteractionsTable("public", "device_interactions", "")

type deviceInteractionsTable struct {
	postgres.Table

	// Columns
	InteractionID postgres.ColumnString
	Latitude      postgres.ColumnFloat
	Longitude     postgres.ColumnFloat
	DeviceID      postgres.ColumnString
	DeviceName    postgres.ColumnString
	Timestamp     postgres.ColumnTimestamp
	CreatedAt     postgres.ColumnTimestamp
	UpdatedAt     postgres.ColumnTimestamp

	AllColumns     postgres.ColumnList
	MutableColumns postgres.ColumnList
}

type DeviceInteractionsTable struct {
	deviceInteractionsTable

	EXCLUDED deviceInteractionsTable
}

// AS creates new DeviceInteractionsTable with assigned alias
func (a DeviceInteractionsTable) AS(alias string) *DeviceInteractionsTable {
	return newDeviceInteractionsTable(a.SchemaName(), a.TableName(), alias)
}

// Schema creates new DeviceInteractionsTable with assigned schema name
func (a DeviceInteractionsTable) FromSchema(schemaName string) *DeviceInteractionsTable {
	return newDeviceInteractionsTable(schemaName, a.TableName(), a.Alias())
}

// WithPrefix creates new DeviceInteractionsTable with assigned table prefix
func (a DeviceInteractionsTable) WithPrefix(prefix string) *DeviceInteractionsTable {
	return newDeviceInteractionsTable(a.SchemaName(), prefix+a.TableName(), a.TableName())
}

// WithSuffix creates new DeviceInteractionsTable with assigned table suffix
func (a DeviceInteractionsTable) WithSuffix(suffix string) *DeviceInteractionsTable {
	return newDeviceInteractionsTable(a.SchemaName(), a.TableName()+suffix, a.TableName())
}

func newDeviceInteractionsTable(schemaName, tableName, alias string) *DeviceInteractionsTable {
	return &DeviceInteractionsTable{
		deviceInteractionsTable: newDeviceInteractionsTableImpl(schemaName, tableName, alias),
		EXCLUDED:                newDeviceInteractionsTableImpl("", "excluded", ""),
	}
}

func newDeviceInteractionsTableImpl(schemaName, tableName, alias string) deviceInteractionsTable {
	var (
		InteractionIDColumn = postgres.StringColumn("interaction_id")
		LatitudeColumn      = postgres.FloatColumn("latitude")
		LongitudeColumn     = postgres.FloatColumn("longitude")
		DeviceIDColumn      = postgres.StringColumn("device_id")
		DeviceNameColumn    = postgres.StringColumn("device_name")
		TimestampColumn     = postgres.TimestampColumn("timestamp")
		CreatedAtColumn     = postgres.TimestampColumn("created_at")
		UpdatedAtColumn     = postgres.TimestampColumn("updated_at")
		allColumns          = postgres.ColumnList{InteractionIDColumn, LatitudeColumn, LongitudeColumn, DeviceIDColumn, DeviceNameColumn, TimestampColumn, CreatedAtColumn, UpdatedAtColumn}
		mutableColumns      = postgres.ColumnList{LatitudeColumn, LongitudeColumn, DeviceIDColumn, DeviceNameColumn, TimestampColumn, CreatedAtColumn, UpdatedAtColumn}
	)

	return deviceInteractionsTable{
		Table: postgres.NewTable(schemaName, tableName, alias, allColumns...),

		//Columns
		InteractionID: InteractionIDColumn,
		Latitude:      LatitudeColumn,
		Longitude:     LongitudeColumn,
		DeviceID:      DeviceIDColumn,
		DeviceName:    DeviceNameColumn,
		Timestamp:     TimestampColumn,
		CreatedAt:     CreatedAtColumn,
		UpdatedAt:     UpdatedAtColumn,

		AllColumns:     allColumns,
		MutableColumns: mutableColumns,
	}
}
